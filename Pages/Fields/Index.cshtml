@page
@model FarmApplication.Pages.Fields.IndexModel

@using System.Security.Claims

<div class="container p-3">
	<div class="row pt-4">
		<div class="col-6">
			<h2 class="text-primary">Field List</h2>
		</div>
		<div class="col-6 text-end">
			<a asp-page="AddField" class="btn btn-primary">
				Create new field
			</a>
		</div>
	</div>

	<br /><br />

	<!-- this will show a set notification for when one of the three actions is performed on the database. Notification can be found at the end of the .cs files -->
	@if (TempData["success"] != null)
	{
		
		<p class="text-success">@TempData["success"]</p>

	}
	
	@{
		var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier); // Retrieve current user's ID
	}

	<table class="table table-bordered table-striped" style="width:100%">
		<thead>
			<tr>
				<th>
					Field name
				</th>
				<th>
					Field size
				</th>
				<th>
					Latitude1
				</th>
				<th>
					Longitude1
				</th>
				
				
			</tr>
		</thead>
		<tbody>
			@foreach (var obj in Model.Fields.Where(f => f.UserID == currentUserId))

			{
				<tr>
					<td width="25%">@obj.FieldName</td>
					<td width="25%">@obj.FieldSize</td>
					<td width="25%">@obj.Latitude1</td>
					<td width="25">@obj.Longitude1</td>
					<td>
						<div class="w-75 btn-group" role="group">
						<a asp-page="EditField" asp-route-id="@obj.FieldID" class="btn btn-primary mx-2">Edit
						</a>
						<a asp-page="DeleteField" asp-route-id="@obj.FieldID" class="btn btn-danger mx-2">Delete</a>
						</div>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<head>
		<title>Map for fields</title>

		<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
	</head>
	<body>
		
			<h1>Map of fields for user</h1>
			<div id="map"></div>
			@section Scripts {
			<script>
				var lines = [

				]
				var uk = { lat: 53.261954145266294, lng: - 1.547932385190446 }
				function initMap() {
					var map = new google.maps.Map(document.getElementById("map"), {
						zoom: 8,
						center: uk,
						mapTypeId: "terrain"
					});
					
					var fields = [
						
						@foreach (var obj in Model.Fields.Where(f => f.UserID == currentUserId))
						{
					<text>{ lat: @obj.Latitude1 , lng: @obj.Longitude1, lat: 110, lng: 70  }
							 </text>
						}
					
					
					];
					
					var fixedP = { lat: 40.7128, lng: - 74.0060 };
					fields.push(fixedP);
					var fieldsCoords = fields.map(function (location) {
						return new google.maps.latLng(location.lat, location.lng, location.lat, location.lng);
					});
					
					var fieldArea = new google.maps.Polygon({
						path: fieldsCoords,
						geodesic: true,
						strokeColor: "Red",
						strokeOpacity: 1.0,
						strokeWeight: 2,
					});

					fieldArea.setMap(map);
				}
				
				window.initMap = initMap;
				
			
			</script>
			
				
			<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCXhl_GzMw20renhg092Eksy1GqMT1r3VM&callback=initMap&v=weekly"
			async defer>
			</script>
		}

	</body>

</div>
